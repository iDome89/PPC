{"ast":null,"code":"import _defineProperty from \"/Users/katerinaroskovcova/Desktop/MyProjects/PPCBee/PPCBee/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/katerinaroskovcova/Desktop/MyProjects/PPCBee/PPCBee/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/katerinaroskovcova/Desktop/MyProjects/PPCBee/PPCBee/src/components/table.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from \"react\";\nimport { TableContext } from '../model/context';\nimport Settings from \"./settings\";\nimport Model from \"../model/model\";\n\nvar Table = function Table() {\n  var _useState = useState(Model()),\n      _useState2 = _slicedToArray(_useState, 2),\n      model = _useState2[0],\n      setModel = _useState2[1];\n\n  var _useContext = useContext(TableContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      columns = _useContext2[0],\n      setColumns = _useContext2[1];\n\n  var _useState3 = useState({\n    isShown: false\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      popup = _useState4[0],\n      setPopup = _useState4[1];\n\n  var _useState5 = useState({\n    value: \"\"\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      tableData = _useState6[0],\n      setTableData = _useState6[1];\n\n  var togglePopup = function togglePopup(e) {\n    setPopup(_objectSpread({}, popup, {\n      isShown: !popup.isShown\n    }));\n    setTableData({\n      value: e.target.innerText\n    });\n  };\n\n  var handleChange = function handleChange(ev) {\n    setTableData(_objectSpread({}, tableData, {\n      value: ev.target.value\n    }));\n  };\n\n  var handleUpdate = function handleUpdate(e) {\n    e.preventDefault();\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    className: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, columns.map(function (column) {\n    return column.checked ? React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, column.name) : null;\n  })), model.map(function (data) {\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, columns.map(function (key) {\n      return key.checked ? React.createElement(\"td\", {\n        onClick: togglePopup,\n        className: \"table_data\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, data[key.name], \" \") : null;\n    }));\n  })), React.createElement(Settings, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), popup.isShown ? React.createElement(\"div\", {\n    className: \"popup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"popup_inner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"edit_input\",\n    onChange: handleChange,\n    type: \"text\",\n    defaultValue: tableData.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    onSubmit: handleUpdate,\n    type: \"submit\",\n    className: \"edit_save\",\n    value: \"Save\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })))) : null);\n};\n\nexport default Table;","map":{"version":3,"sources":["/Users/katerinaroskovcova/Desktop/MyProjects/PPCBee/PPCBee/src/components/table.js"],"names":["React","useState","useContext","TableContext","Settings","Model","Table","model","setModel","columns","setColumns","isShown","popup","setPopup","value","tableData","setTableData","togglePopup","e","target","innerText","handleChange","ev","handleUpdate","preventDefault","map","column","checked","name","data","key"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport {TableContext} from '../model/context';\nimport Settings from \"./settings\";\nimport Model from \"../model/model\"\n\n\n\n\nconst Table = () => {\n    const [model, setModel] = useState (Model());\n    const [columns, setColumns] = useContext(TableContext);\n    const [popup, setPopup] = useState({isShown:false});\n    const [tableData, setTableData] = useState({value:\"\"});\n    \n    const togglePopup = (e)=>{\n      setPopup({...popup, isShown:!popup.isShown});\n      setTableData({value:e.target.innerText});\n    }\n\n    const handleChange = (ev)=>{\n     setTableData({...tableData, value:ev.target.value})\n    }\n    const handleUpdate = (e)=>{\n        e.preventDefault();\n\n\n    }\n\n    return (\n        <div>\n            <table className=\"table\">\n                <tr>\n                  {columns.map(column =>{\n                   return column.checked ? <th>{column.name}</th> : null\n                 })} \n                </tr>\n\n                {model.map(data => <tr>{columns.map(key => {return key.checked ? <td onClick={togglePopup} className=\"table_data\">{data[key.name]} </td> :null})}</tr>\n                    \n                )}\n             </table>\n             <Settings />\n             {popup.isShown ? \n                <div className='popup'>\n                <div className='popup_inner'>\n                  <form>\n                    <input className= \"edit_input\" onChange={handleChange} type=\"text\" defaultValue={tableData.value} />\n                    <input onSubmit={handleUpdate}type=\"submit\" className= \"edit_save\" value=\"Save\"/>\n                 </form>\n                </div>\n              </div>\n        \n          : null\n        }\n        </div>\n    )\n}\n\nexport default Table"]},"metadata":{},"sourceType":"module"}