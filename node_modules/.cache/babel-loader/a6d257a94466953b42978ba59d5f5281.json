{"ast":null,"code":"import _slicedToArray from \"/Users/katerinaroskovcova/Desktop/MyProjects/PPCBee/PPCBee/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/katerinaroskovcova/Desktop/MyProjects/PPCBee/PPCBee/src/components/table.js\";\nimport React, { useState, useContext } from \"react\";\nimport { TableContext } from '../model/context';\nimport Settings from \"./settings\";\nimport Model from \"../model/model\";\n\nvar Table = function Table() {\n  var _useState = useState(Model()),\n      _useState2 = _slicedToArray(_useState, 2),\n      model = _useState2[0],\n      setModel = _useState2[1];\n\n  var _useContext = useContext(TableContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      columns = _useContext2[0],\n      setColumns = _useContext2[1];\n\n  var _useState3 = useState({\n    isShown: false,\n    value: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      popup = _useState4[0],\n      setPopup = _useState4[1];\n\n  var togglePopup = function togglePopup() {\n    setPopup(!popup);\n  };\n\n  var handleChange = function handleChange() {};\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    className: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, columns.map(function (column) {\n    return column.checked ? React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, column.name) : null;\n  })), model.map(function (data) {\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, columns.map(function (key) {\n      return key.checked ? React.createElement(\"td\", {\n        onClick: togglePopup,\n        className: \"table_data\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, data[key.name], \" \") : null;\n    }));\n  })), React.createElement(Settings, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), popup.isShown ? React.createElement(\"div\", {\n    className: \"popup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"popup_inner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"edit_input\",\n    type: \"text\",\n    value: popup.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"edit_save\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Save\"))) : null);\n};\n\nexport default Table;","map":{"version":3,"sources":["/Users/katerinaroskovcova/Desktop/MyProjects/PPCBee/PPCBee/src/components/table.js"],"names":["React","useState","useContext","TableContext","Settings","Model","Table","model","setModel","columns","setColumns","isShown","value","popup","setPopup","togglePopup","handleChange","map","column","checked","name","data","key"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAAQC,YAAR,QAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAKA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA,kBACUL,QAAQ,CAAEI,KAAK,EAAP,CADlB;AAAA;AAAA,MACTE,KADS;AAAA,MACFC,QADE;;AAAA,oBAEcN,UAAU,CAACC,YAAD,CAFxB;AAAA;AAAA,MAETM,OAFS;AAAA,MAEAC,UAFA;;AAAA,mBAGUT,QAAQ,CAAC;AAACU,IAAAA,OAAO,EAAC,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAAD,CAHlB;AAAA;AAAA,MAGTC,KAHS;AAAA,MAGFC,QAHE;;AAKhB,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAI;AACtBD,IAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACD,GAFD;;AAIA,MAAMG,YAAY,GAAG,SAAfA,YAAe,GAAI,CAExB,CAFD;;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,OAAO,CAACQ,GAAR,CAAY,UAAAC,MAAM,EAAG;AACrB,WAAOA,MAAM,CAACC,OAAP,GAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,MAAM,CAACE,IAAZ,CAAjB,GAA0C,IAAjD;AACD,GAFC,CADH,CADJ,EAOKb,KAAK,CAACU,GAAN,CAAU,UAAAI,IAAI;AAAA,WAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKZ,OAAO,CAACQ,GAAR,CAAY,UAAAK,GAAG,EAAI;AAAC,aAAOA,GAAG,CAACH,OAAJ,GAAc;AAAI,QAAA,OAAO,EAAEJ,WAAb;AAA0B,QAAA,SAAS,EAAC,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkDM,IAAI,CAACC,GAAG,CAACF,IAAL,CAAtD,MAAd,GAAuF,IAA9F;AAAmG,KAAvH,CAAL,CAAJ;AAAA,GAAd,CAPL,CADJ,EAYK,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZL,EAaMP,KAAK,CAACF,OAAN,GACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAE,YAAlB;AAA+B,IAAA,IAAI,EAAC,MAApC;AAA2C,IAAA,KAAK,EAAEE,KAAK,CAACD,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEA;AAAQ,IAAA,SAAS,EAAE,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,CADA,CADF,GAQF,IArBJ,CADJ;AA0BH,CAvCD;;AAyCA,eAAeN,KAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport {TableContext} from '../model/context';\nimport Settings from \"./settings\";\nimport Model from \"../model/model\"\n\n\n\n\nconst Table = () => {\n    const [model, setModel] = useState (Model());\n    const [columns, setColumns] = useContext(TableContext);\n    const [popup, setPopup] = useState({isShown:false, value :\"\"})\n\n    const togglePopup = ()=>{\n      setPopup(!popup)\n    }\n\n    const handleChange = ()=>{\n\n    }\n\n    return (\n        <div>\n            <table className=\"table\">\n                <tr>\n                  {columns.map(column =>{\n                   return column.checked ? <th>{column.name}</th> : null\n                 })} \n                </tr>\n\n                {model.map(data => <tr>{columns.map(key => {return key.checked ? <td onClick={togglePopup} className=\"table_data\">{data[key.name]} </td> :null})}</tr>\n                    \n                )}\n             </table>\n             <Settings />\n             {popup.isShown ? \n                <div className='popup'>\n                <div className='popup_inner'>\n                  <input className= \"edit_input\" type=\"text\" value={popup.value} />\n                <button className= \"edit_save\">Save</button>\n                </div>\n              </div>\n        \n          : null\n        }\n        </div>\n    )\n}\n\nexport default Table"]},"metadata":{},"sourceType":"module"}